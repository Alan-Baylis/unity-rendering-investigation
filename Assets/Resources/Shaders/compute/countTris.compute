#pragma kernel AccumulateTriangles
#pragma kernel ClearAccum
#pragma kernel MapTris

Texture2D<float4> _idTex;
RWStructuredBuffer<int> _idaccum;
AppendStructuredBuffer<uint> _trilist;

// kernel to increment / count the triangles ids in the
// id rendertexture and set a buffer per triangle id
[numthreads(1, 1, 1)]
void AccumulateTriangles(uint3 id : SV_DispatchThreadID)
{
    float4 px = _idTex[id.xy];
    int index = 
        (((int)(px.x * 255) & 0xFF) << 0) |
        (((int)(px.y * 255) & 0xFF) << 8) |
        (((int)(px.z * 255) & 0xFF) << 16) |
        (((int)(px.w * 255) & 0xFF) << 24);

    _idaccum[index] = 1;
}

// kernel to quickly clear / reset the above buffer to 0 / false
[numthreads(1, 1, 1)]
void ClearAccum(uint3 id : SV_DispatchThreadID)
{
    uint index = id.x + id.y + id.z;
    _idaccum[index] = 0;
}

// Accumulate a list of 
[numthreads(1, 1, 1)]
void MapTris(uint3 id : SV_DispatchThreadID)
{
    uint index = id.x + id.y + id.z;
    int val = _idaccum[index];

    if (val != 0) _trilist.Append(index);

    _idaccum[index] = 0;
}