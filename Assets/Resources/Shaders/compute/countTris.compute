// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel CSMain

// Create a RenderTexture with enableRandomWrite flag and set it
// with cs.SetTexture
RWTexture2D<float4> Result;

[numthreads(8,8,1)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
	// TODO: insert actual code here!

	Result[id.xy] = float4(id.x & id.y, (id.x & 15)/15.0, (id.y & 15)/15.0, 0.0);
}


// TODO: Build kernel to increment / count the triangles in an 
// id rendertexture and set a (bool or byte?) buffer per triangle id

// TODO: Build a kernel to quickly clear / reset the above buffer to 0 / false

// TODO: Build a kernel to append to an array to draw triangles. Appends IF
// the triangle index count is > 0